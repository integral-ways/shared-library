name: Publish Maven Github Package

on:
  workflow_dispatch: # allows manual trigger via GitHub CLI or UI
    inputs:
      releaseType:
        description: 'Version bump type (patch, minor, major)'
        required: true
        default: 'patch'
  push:
    tags:
      - 'v*' # still supports pushing tags

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: github
          server-username: GITHUB_ACTOR
          server-password: ${{ secrets.GITHUB_TOKEN }}

      # Get current version from pom.xml
      - name: Get current version
        id: get_version
        run: |
          current_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "current_version=$current_version" >> $GITHUB_ENV

      # Bump version automatically
      - name: Bump version
        run: |
          release_type="${{ github.event.inputs.releaseType }}"
          base_version="${{ env.current_version }}"
          IFS='.' read -r major minor patch <<< "$base_version"
          if [ "$release_type" = "major" ]; then
            major=$((major+1)); minor=0; patch=0
          elif [ "$release_type" = "minor" ]; then
            minor=$((minor+1)); patch=0
          else
            patch=$((patch+1))
          fi
          new_version="${major}.${minor}.${patch}"
          mvn versions:set -DnewVersion=$new_version
          mvn versions:commit
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Commit new version and push
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git commit -am "chore: bump version to ${{ env.new_version }}"
          git tag "v${{ env.new_version }}"
          # Get the branch name from the workflow context
          BRANCH="${GITHUB_REF_NAME}"
          git push origin "$BRANCH"
          git push origin "v${{ env.new_version }}"

      - name: Build with Maven
        run: mvn -B package

      - name: Publish to GitHub Packages
        run: mvn deploy -DskipTests
